//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/InputActions/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""OceanFloor Controls"",
            ""id"": ""2746fb08-49ac-4e08-8f67-f959584fd942"",
            ""actions"": [
                {
                    ""name"": ""Thrust"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4772709e-95dd-4647-8675-91bf7a2f8680"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""PassThrough"",
                    ""id"": ""12e84d45-4a5f-4be9-804c-c258f8014e7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpDown"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f669c9a7-bdec-41e0-8728-2d82d3632903"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PitchYaw"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4a17c085-1577-40ea-8a0d-1bf07165e5b7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4de758c2-f925-402f-9712-0d523235cb14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0f80c30f-1f15-4c62-b718-4f4bb4e3ac2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""UpDownKB"",
                    ""id"": ""d45130fd-b101-485e-a4ff-71e9c9ea2416"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""fea09c8d-3a8f-4b0c-bbb2-e7987329a0af"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""039eba52-af90-49e0-8e2b-77aef5e212a5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8bfd5107-6c46-4d60-b8b3-70e23c94a600"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a17f1c85-d60e-4f6a-969a-fc97806f865e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""9a771ffe-968c-48f6-a7e9-6c41383e746f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""7cae31f0-ff9f-4152-a07b-5e3d72518284"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""7f6f6053-3c1c-4f1e-9893-517b31c74cea"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""727ae9a8-b598-4d35-9f06-a266d40fe24d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""6fdcbd3a-7982-499f-9bcd-b3d3ebdceb54"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""f331878d-d136-4dcf-8413-2ac218618309"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""587b89d8-1095-4279-91b3-69f5e09aee5b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchYaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // OceanFloor Controls
        m_OceanFloorControls = asset.FindActionMap("OceanFloor Controls", throwIfNotFound: true);
        m_OceanFloorControls_Thrust = m_OceanFloorControls.FindAction("Thrust", throwIfNotFound: true);
        m_OceanFloorControls_Strafe = m_OceanFloorControls.FindAction("Strafe", throwIfNotFound: true);
        m_OceanFloorControls_UpDown = m_OceanFloorControls.FindAction("UpDown", throwIfNotFound: true);
        m_OceanFloorControls_PitchYaw = m_OceanFloorControls.FindAction("PitchYaw", throwIfNotFound: true);
        m_OceanFloorControls_Boost = m_OceanFloorControls.FindAction("Boost", throwIfNotFound: true);
        m_OceanFloorControls_Shoot = m_OceanFloorControls.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // OceanFloor Controls
    private readonly InputActionMap m_OceanFloorControls;
    private IOceanFloorControlsActions m_OceanFloorControlsActionsCallbackInterface;
    private readonly InputAction m_OceanFloorControls_Thrust;
    private readonly InputAction m_OceanFloorControls_Strafe;
    private readonly InputAction m_OceanFloorControls_UpDown;
    private readonly InputAction m_OceanFloorControls_PitchYaw;
    private readonly InputAction m_OceanFloorControls_Boost;
    private readonly InputAction m_OceanFloorControls_Shoot;
    public struct OceanFloorControlsActions
    {
        private @PlayerControls m_Wrapper;
        public OceanFloorControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Thrust => m_Wrapper.m_OceanFloorControls_Thrust;
        public InputAction @Strafe => m_Wrapper.m_OceanFloorControls_Strafe;
        public InputAction @UpDown => m_Wrapper.m_OceanFloorControls_UpDown;
        public InputAction @PitchYaw => m_Wrapper.m_OceanFloorControls_PitchYaw;
        public InputAction @Boost => m_Wrapper.m_OceanFloorControls_Boost;
        public InputAction @Shoot => m_Wrapper.m_OceanFloorControls_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_OceanFloorControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OceanFloorControlsActions set) { return set.Get(); }
        public void SetCallbacks(IOceanFloorControlsActions instance)
        {
            if (m_Wrapper.m_OceanFloorControlsActionsCallbackInterface != null)
            {
                @Thrust.started -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnThrust;
                @Thrust.performed -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnThrust;
                @Thrust.canceled -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnThrust;
                @Strafe.started -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnStrafe;
                @Strafe.performed -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnStrafe;
                @Strafe.canceled -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnStrafe;
                @UpDown.started -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnUpDown;
                @UpDown.performed -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnUpDown;
                @UpDown.canceled -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnUpDown;
                @PitchYaw.started -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnPitchYaw;
                @PitchYaw.performed -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnPitchYaw;
                @PitchYaw.canceled -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnPitchYaw;
                @Boost.started -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnBoost;
                @Boost.performed -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnBoost;
                @Boost.canceled -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnBoost;
                @Shoot.started -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_OceanFloorControlsActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_OceanFloorControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Thrust.started += instance.OnThrust;
                @Thrust.performed += instance.OnThrust;
                @Thrust.canceled += instance.OnThrust;
                @Strafe.started += instance.OnStrafe;
                @Strafe.performed += instance.OnStrafe;
                @Strafe.canceled += instance.OnStrafe;
                @UpDown.started += instance.OnUpDown;
                @UpDown.performed += instance.OnUpDown;
                @UpDown.canceled += instance.OnUpDown;
                @PitchYaw.started += instance.OnPitchYaw;
                @PitchYaw.performed += instance.OnPitchYaw;
                @PitchYaw.canceled += instance.OnPitchYaw;
                @Boost.started += instance.OnBoost;
                @Boost.performed += instance.OnBoost;
                @Boost.canceled += instance.OnBoost;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public OceanFloorControlsActions @OceanFloorControls => new OceanFloorControlsActions(this);
    public interface IOceanFloorControlsActions
    {
        void OnThrust(InputAction.CallbackContext context);
        void OnStrafe(InputAction.CallbackContext context);
        void OnUpDown(InputAction.CallbackContext context);
        void OnPitchYaw(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
